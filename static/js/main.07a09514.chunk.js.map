{"version":3,"sources":["store/model.js","store/index.js","screens/intro.js","components/user.js","screens/home.js","App.js","reportWebVitals.js","index.js"],"names":["model","userKey","undefined","setUserKey","action","state","payload","sendLoadDataRequest","thunk","actions","a","console","log","axios","post","data","store","createStore","Title","Typography","Paragraph","Text","Introduction","Link","span","className","User","useStoreActions","onClick","Header","Layout","Content","Footer","HomeScreen","useState","direction","theme","mode","defaultSelectedKeys","Item","accept","beforeUpload","file","reader","FileReader","readAsText","onload","e","arr","target","result","match","length","url","replace","icon","UploadOutlined","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07a09514.chunk.js","sourcesContent":["import { action, thunk } from \"easy-peasy\";\nimport axios from \"axios\";\n\nconst url = \"https://genshin-gacha-logs.herokuapp.com\";\nconst model = {\n  userKey: undefined,\n  setUserKey: action((state, payload) => {\n    state.userKey = payload;\n  }),\n  sendLoadDataRequest: thunk(async (actions, payload) => {\n    console.log(payload);\n    const { data } = await axios.post(`${url}/load-data`, {\n      userKey: payload,\n    });\n    console.log(data);\n  }),\n};\n\nexport default model;\n","import { createStore } from \"easy-peasy\";\nimport model from \"./model\";\n\nconst store = createStore({ model });\n\nexport default store;\n","import { Typography, Divider, Row, Col, Space } from \"antd\";\n\nconst { Title, Paragraph, Text, Link } = Typography;\n\nconst Introduction = () => {\n  return (\n    <Typography>\n      <Title>Hướng dẫn sử dụng</Title>\n      <Paragraph>\n        <>\n          <Row>\n            <Col span={8}></Col>\n            <Col span={8}>\n              <Paragraph className=\"Paragraph-left\">\n                <Text>\n                  {\" \"}\n                  <strong>Bước 1:</strong> Vào màn hình gacha của game trên PC.\n                </Text>\n              </Paragraph>\n              <Paragraph className=\"Paragraph-left\">\n                <Text>\n                  {\" \"}\n                  <strong>Bước 2:</strong> Copy file ra Desktop{\" \"}\n                </Text>\n              </Paragraph>\n              <Paragraph className=\"Paragraph-left\">\n                <Text>\n                  userPath/AppData/LocalLow/miHoYo/name/output_log.txt\n                </Text>\n              </Paragraph>\n              <Paragraph className=\"Paragraph-left\">\n                <Text>\n                  <strong>Bước 3:</strong> Upload file lên và xem kết quả.\n                </Text>\n              </Paragraph>\n            </Col>\n            <Col span={8}></Col>\n          </Row>\n        </>\n      </Paragraph>\n    </Typography>\n  );\n};\n\nexport default Introduction;\n","import React, { useState } from \"react\";\nimport {\n  Layout,\n  Menu,\n  Space,\n  Upload,\n  Button,\n  Typography,\n  Row,\n  Col,\n} from \"antd\";\n\nimport { useStoreActions } from \"easy-peasy\";\nconst { Text } = Typography;\n\nconst User = ({ userKey }) => {\n  const sendLoadDataRequest = useStoreActions(\n    (actions) => actions.model.sendLoadDataRequest\n  );\n  if (userKey !== null && userKey !== undefined && userKey !== \"\") {\n    return (\n      <Button\n        onClick={() => {\n          sendLoadDataRequest(userKey);\n        }}\n      >\n        Load Your Data\n      </Button>\n    );\n  } else {\n    return <>{/* <Text>Failed to load user key from log file</Text> */}</>;\n  }\n};\n\nexport default User;\n","import React, { useState } from \"react\";\nimport {\n  Layout,\n  Menu,\n  Space,\n  Upload,\n  Button,\n  Typography,\n  Row,\n  Col,\n} from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport Introduction from \"./intro\";\nimport User from \"../components/user\";\n\nconst { Header, Content, Footer } = Layout;\nconst { Title, Paragraph, Text, Link } = Typography;\n\nconst HomeScreen = () => {\n  const [userKey, setUserKey] = useState(\"\");\n  return (\n    <Layout>\n      <Space direction=\"vertical\">\n        <Header>\n          <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[\"1\"]}>\n            <Menu.Item key=\"1\">Genshin Gacha Logs</Menu.Item>\n            <Menu.Item key=\"2\">Mua Account</Menu.Item>\n          </Menu>\n        </Header>\n        <Content>\n          <Introduction></Introduction>\n          <Row>\n            <Col span={8}></Col>\n            <Col span={8}>\n              <Upload\n                accept=\".txt\"\n                beforeUpload={(file) => {\n                  const reader = new FileReader();\n                  reader.readAsText(file);\n                  reader.onload = (e) => {\n                    let logText = e.target.result;\n                    let arr = logText.match(\n                      /^OnGetWebViewPageFinish:https:\\/\\/.+\\?.+?(?:#.+)?$/gm\n                    );\n                    if (arr && arr.length) {\n                      let url = arr[arr.length - 1].replace(\n                        \"OnGetWebViewPageFinish:\",\n                        \"\"\n                      );\n                      setUserKey(url);\n                    }\n                  };\n                }}\n              >\n                <Button icon={<UploadOutlined />}>Click to Upload</Button>\n              </Upload>\n            </Col>\n            <Col span={8}></Col>\n          </Row>\n\n          <User userKey={userKey}></User>\n        </Content>\n        <Footer></Footer>\n      </Space>\n    </Layout>\n  );\n};\n\nexport default HomeScreen;\n","import React from \"react\";\nimport { Button } from \"antd\";\nimport \"./App.css\";\nimport { StoreProvider } from \"easy-peasy\";\nimport store from \"./store/index\";\nimport HomeScreen from \"./screens/home\";\n\nconst App = () => (\n  <StoreProvider store={store}>\n    <div className=\"App\">\n      <HomeScreen></HomeScreen>\n    </div>\n  </StoreProvider>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}